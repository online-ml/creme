class PyQuantile:
    def __init__(self, q: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyEWMean:
    def __init__(self, alpha: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyEWVar:
    def __init__(self, alpha: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyIQR:
    def __init__(self, q_inf: float, q_sup: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyKurtosis:
    def __init__(self, bias: bool): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyPeakToPeak:
    def __init__(self): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PySkew:
    def __init__(self, bias: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyRollingQuantile:
    def __init__(self, q: float, window_size: int): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class PyRollingIQR:
    def __init__(self, q_inf: float, q_sup: float, window_size: int): ...
    def update(self, x: float): ...
    def get(self) -> float: ...
