name: unit-tests

on:
  workflow_call:
    inputs:
      python:
        type: string
      os:
        type: string

jobs:
  test:
    runs-on: ${{ inputs.os }}

    # Instead of using two matrices in the calling Workflow, we can use conditionals here
    # if: (inputs.os == 'ubuntu-latest' && inputs.python == '3.11') || github.event_name == 'push'
    if: (inputs.python == '3.11') || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Retrieve the environment and the River build
        uses: ./.github/actions/retrieve-env
        with:
          python: ${{ inputs.python }}

      - name: Cache River datasets
        uses: actions/cache@v3
        with:
          path: ~/river_data
          key: ${{ runner.os }}

      - name: Cache scikit-learn datasets
        uses: actions/cache@v3
        with:
          path: ~/scikit_learn_data
          key: ${{ runner.os }}

      - name: Download datasets
        run: |
          source ~/.venv/bin/activate
          python -c "from river import datasets; datasets.CreditCard().download(); datasets.Elec2().download(); datasets.SMSSpam().download()"
          python -c "from river import bandit; bandit.datasets.NewsArticles().download()"

      - name: pytest [Branch]
        if: github.event_name == 'pull_request'
        run: |
          source ~/.venv/bin/activate
          pytest --durations=10 -n logical # Run pytest on all logical CPU cores

      - name: pytest [Main]
        if: github.event_name == 'push'
        run: |
          source ~/.venv/bin/activate
          pytest -m "not datasets" --durations=10 -n logical # Run pytest on all logical CPU cores
